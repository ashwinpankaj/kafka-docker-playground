==========================
Connection
==========================
ðŸ”˜ impala.server

The server address to use to format JDBC URL for connection

	 - Type: STRING
	 - Default: null
	 - Importance: HIGH
	 - Required: true

ðŸ”˜ impala.port

The port to use to format JDBC URL for connection; By default, Impala uses port 21050.

	 - Type: INT
	 - Default: 21050
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ kudu.database

The Kudu database to connect

	 - Type: STRING
	 - Default: default
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ impala.ldap.user

Username to do LDAP authentication with Impala

	 - Type: STRING
	 - Default: null
	 - Importance: HIGH
	 - Required: true

ðŸ”˜ impala.ldap.password

Password to do LDAP authentication with Impala

	 - Type: PASSWORD
	 - Default: null
	 - Importance: HIGH
	 - Required: true

ðŸ”˜ kudu.tablet.replicas

The number of replicas of Kudu tablets

	 - Type: INT
	 - Default: 3
	 - Importance: MEDIUM
	 - Required: false

==========================
Writes
==========================
ðŸ”˜ insert.mode

The insertion mode to use. Supported modes are:

	 - Type: STRING
	 - Default: insert
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ batch.size

Specifies how many records to attempt to batch together for insertion into the destination table, when possible.

	 - Type: INT
	 - Default: 3000
	 - Importance: MEDIUM
	 - Required: false

==========================
Data Mapping
==========================
ðŸ”˜ table.name.format

A format string for the destination table name, which may contain '${topic}' as a placeholder for the originating topic name.

	 - Type: STRING
	 - Default: ${topic}
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ pk.mode

The primary key mode, also refer to ``pk.fields`` documentation for interplay. Supported modes are:

	 - Type: STRING
	 - Default: none
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ pk.fields

``none``

	 - Type: false
	 - Default: LIST
	 - Importance: List of comma-separated primary key field names. The runtime interpretation of this config depends on the ``pk.mode``:
	 - Required: MEDIUM

ðŸ”˜ fields.whitelist

Note that ``pk.fields`` is applied independently in the context of which field(s) form the primary key columns in the destination database, while this configuration is applicable for the other columns.

	 - Type: false
	 - Default: LIST
	 - Importance: List of comma-separated record value field names. If empty, all fields from the record value are utilized, otherwise used to filter to the desired fields.
	 - Required: MEDIUM

==========================
SQL/DDL Support
==========================
ðŸ”˜ auto.create

Whether to automatically create the destination table based on record schema if it is found to be missing by issuing ``CREATE``.

	 - Type: BOOLEAN
	 - Default: false
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ auto.evolve

Whether to automatically add columns in the table schema when found to be missing relative to the record schema by issuing ``ALTER``.

	 - Type: BOOLEAN
	 - Default: false
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ quote.sql.identifiers

When to quote table names, column names, and other identifiers in SQL statements. For backward compatibility, the default is 'always'.

	 - Type: STRING
	 - Default: ALWAYS
	 - Importance: MEDIUM
	 - Required: false

==========================
Retries
==========================
ðŸ”˜ max.retries

The maximum number of times to retry on errors before failing the task.

	 - Type: INT
	 - Default: 10
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ retry.backoff.ms

The time in milliseconds to wait following an error before a retry attempt is made.

	 - Type: INT
	 - Default: 3000
	 - Importance: MEDIUM
	 - Required: false

