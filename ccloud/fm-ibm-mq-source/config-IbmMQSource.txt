==========================
How should we connect to your data?
==========================
ðŸ”˜ connector.class



	 - Type: true
	 - Default: STRING
	 - Importance: 
	 - Required: HIGH

ðŸ”˜ name



	 - Type: true
	 - Default: STRING
	 - Importance: Sets a name for your connector.
	 - Required: HIGH

==========================
Kafka Cluster credentials
==========================
ðŸ”˜ kafka.auth.mode

Kafka Authentication mode. It can be one of KAFKA_API_KEY or SERVICE_ACCOUNT. It defaults to KAFKA_API_KEY mode.

	 - Type: STRING
	 - Default: KAFKA_API_KEY
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ kafka.service.account.id



	 - Type: false
	 - Default: STRING
	 - Importance: The Service Account that will be used to generate the API keys to communicate with Kafka Cluster.
	 - Required: HIGH

ðŸ”˜ kafka.api.key



	 - Type: false
	 - Default: STRING
	 - Importance: Kafka API Key. Required when kafka.auth.mode==KAFKA_API_KEY.
	 - Required: HIGH

ðŸ”˜ kafka.api.secret



	 - Type: false
	 - Default: PASSWORD
	 - Importance: Secret associated with Kafka API key. Required when kafka.auth.mode==KAFKA_API_KEY.
	 - Required: HIGH

ðŸ”˜ datapreview.schemas.enable

This config key only applies to data preview requests and governs whether the data preview output has record schema with it.

	 - Type: STRING
	 - Default: false
	 - Importance: LOW
	 - Required: false

==========================
Which topic do you want to send data to?
==========================
ðŸ”˜ kafka.topic



	 - Type: true
	 - Default: STRING
	 - Importance: Identifies the topic name to write the data to.
	 - Required: HIGH

==========================
Exactly Once Semantics
==========================
ðŸ”˜ exactly.once.enabled

When set to true, enables exactly-once support for this connector, ensuring each record reaches the destination exactly once.

	 - Type: BOOLEAN
	 - Default: false
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ offsets.storage.topic



	 - Type: false
	 - Default: STRING
	 - Importance: The topic name used as offset storage topic to store the connector's offsets. Defaults to ``connect-offsets-${connector}``. Within the value, ``${connector}`` can be used as a placeholder for the logical cluster ID. The designated topic should not pre-exist.
	 - Required: MEDIUM

ðŸ”˜ state.topic.name



	 - Type: false
	 - Default: STRING
	 - Importance: The name of the IBM MQ topic used to guarantee exactly-once message delivery. The connector stores and uses offset data in this topic to ensure delivery across restarts. This topic must be created in IBM MQ before the connector is created, as it will not be auto-created. Since the connector uses a durable subscriber to consume from this topic, it should not be shared with any other connector or consumer.
	 - Required: MEDIUM

==========================
CSFLE
==========================
ðŸ”˜ csfle.enabled

Determines whether the connector honours CSFLE rules or not

	 - Type: BOOLEAN
	 - Default: false
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ sr.service.account.id



	 - Type: false
	 - Default: STRING
	 - Importance: Select the service account that has appropriate permissions to schemas and encryption keys in the Schema Registry.
	 - Required: HIGH

==========================
Schema Config
==========================
ðŸ”˜ schema.context.name

Add a schema context name. A schema context represents an independent scope in Schema Registry. It is a separate sub-schema tied to topics in different Kafka clusters that share the same Schema Registry instance. If not used, the connector uses the default schema configured for Schema Registry in your Confluent Cloud environment.

	 - Type: STRING
	 - Default: default
	 - Importance: MEDIUM
	 - Required: false

==========================
Output messages
==========================
ðŸ”˜ output.data.format

Sets the output Kafka record value format. Valid entries are AVRO, JSON_SR, PROTOBUF, or JSON. Note that you need to have Confluent Cloud Schema Registry configured if using a schema-based message format like AVRO, JSON_SR, and PROTOBUF

	 - Type: STRING
	 - Default: JSON
	 - Importance: HIGH
	 - Required: true

==========================
IBM MQ Secure Connection
==========================
ðŸ”˜ mq.tls.protocol

The TLS protocol version for secure connections to IBM MQ. The default is ``TLSv1.2``, which should be fine for most cases, though the actual set of allowed values will depend on the JVM. Recent JVMs support ``TLSv1.3`` and ``TLSv1.2``, ``TLSv1.1`` and ``TLS``. Older JVMs may support ``SSL``, ``SSLv2`` and ``SSLv3``, but these versions are disabled due to known security vulnerabilities.

	 - Type: STRING
	 - Default: TLSv1.2
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ mq.tls.keystore.type

The file format of the key store file. This is required only when using secure TLS communication with IBM MQ. For MQ on Cloud queue managers of version 9.2.1 revision 2 and above, TLS is enabled by default

	 - Type: STRING
	 - Default: JKS
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ mq.tls.keystore.location



	 - Type: false
	 - Default: PASSWORD
	 - Importance: The key store file. This is required only when using secure TLS communication with IBM MQ.
	 - Required: HIGH

ðŸ”˜ mq.tls.keystore.password



	 - Type: false
	 - Default: PASSWORD
	 - Importance: The store password for the key store file. This is optional for client and only needed if ``TLS Keystore file`` is configured.
	 - Required: HIGH

ðŸ”˜ mq.tls.key.password



	 - Type: false
	 - Default: PASSWORD
	 - Importance: The password of the private key used for secure TLS communication with IBM MQ.
	 - Required: HIGH

ðŸ”˜ mq.tls.truststore.type

The file format of the trust store file. This is required when using TLS and secure communication with IBM MQ.

	 - Type: STRING
	 - Default: JKS
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ mq.tls.truststore.location



	 - Type: false
	 - Default: PASSWORD
	 - Importance: The trust store file. This is required only when using secure TLS communication with IBM MQ.
	 - Required: HIGH

ðŸ”˜ mq.tls.truststore.password



	 - Type: false
	 - Default: PASSWORD
	 - Importance: The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled. This is required only when using secure TLS communication with IBM MQ.
	 - Required: HIGH

ðŸ”˜ mq.tls.keymanager.algorithm

The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine. This is required only when using secure TLS communication with IBM MQ.

	 - Type: STRING
	 - Default: SunX509
	 - Importance: LOW
	 - Required: false

ðŸ”˜ mq.tls.trustmanager.algorithm

The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine. This is required only when using secure TLS communication with IBM MQ.

	 - Type: STRING
	 - Default: PKIX
	 - Importance: LOW
	 - Required: false

ðŸ”˜ mq.tls.secure.random.implementation



	 - Type: false
	 - Default: STRING
	 - Importance: The SecureRandom PRNG implementation to use for SSL cryptography operations. By default, tries PKCS11 implementation first. If PKCS11 is not supported, iterates through the provider and returns the first working implementation. This is required only when using secure TLS communication with IBM MQ.
	 - Required: LOW

==========================
IBM MQ Session
==========================
ðŸ”˜ jms.destination.name



	 - Type: true
	 - Default: STRING
	 - Importance: The name of the JMS destination (queue or topic) to read from.
	 - Required: HIGH

ðŸ”˜ jms.destination.type

The type of JMS destination, which is either `queue` or `topic`.

	 - Type: STRING
	 - Default: queue
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ max.pending.messages

The maximum number of messages per task that can be received from JMS brokers and produced to Kafka before the task acknowledges the JMS session/messages. If the task fails and is restarted, this is the maximum number of JMS messages the task may duplicate in Kafka.

	 - Type: INT
	 - Default: 2000
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ max.poll.duration



	 - Type: false
	 - Default: INT
	 - Importance: The maximum amount of time each task can build a batch. The batch is closed and sent to Kafka if not enough messages are read during the time allotted. This helps limit connector lag when the JMS queue/topic has a lower throughput.
	 - Required: LOW

ðŸ”˜ character.encoding

The character encoding to use while receiving the message.

	 - Type: STRING
	 - Default: UTF-8
	 - Importance: LOW
	 - Required: false

ðŸ”˜ jms.subscription.durable



	 - Type: false
	 - Default: BOOLEAN
	 - Importance: Whether the subscription of the connector tasks to a JMS topic is durable or not. Durable subscriptions require a subscription name to be set via ``jms.subscription.name``. 
	 - Required: MEDIUM

ðŸ”˜ jms.subscription.name



	 - Type: false
	 - Default: STRING
	 - Importance: The name of the JMS subscription. Supported only in durable subscriptions (``jms.subscription.durable = true``) and is applicable only to JMS topics.
	 - Required: MEDIUM

ðŸ”˜ jms.message.selector



	 - Type: false
	 - Default: STRING
	 - Importance: The JMS message selector that should be applied to messages in the destination.
	 - Required: HIGH

ðŸ”˜ initial.poll.wait.time.ms

The initial amount of time in milliseconds to wait when polling for new messages before switching to a shorter poll interval. This helps reduce the number of empty poll attempts during startup or when the queue is empty.

	 - Type: INT
	 - Default: 5000
	 - Importance: LOW
	 - Required: false

==========================
IBM MQ Connection
==========================
ðŸ”˜ mq.username



	 - Type: true
	 - Default: STRING
	 - Importance: The username to use when connecting to IBM MQ.
	 - Required: HIGH

ðŸ”˜ mq.password



	 - Type: false
	 - Default: PASSWORD
	 - Importance: The password to use when connecting to IBM MQ.
	 - Required: HIGH

ðŸ”˜ mq.configuration.mode

The mode in connector is to configure single mq instance or multiple for HA/DR support

	 - Type: STRING
	 - Default: single
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ mq.hostname



	 - Type: false
	 - Default: STRING
	 - Importance: IBM MQ broker host
	 - Required: HIGH

ðŸ”˜ mq.port

IBM MQ broker port

	 - Type: INT
	 - Default: 1414
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ mq.connection.list



	 - Type: false
	 - Default: STRING
	 - Importance: For IBM's HA/DR support with multiple MQ instances, enter hosts as comma-separated values, for example, host1:port1, host2:port2. Configure the connector with a reasonable value for ``max.retry.time`` to ensure it has sufficient time to switch over to another instance before failing.
	 - Required: HIGH

ðŸ”˜ mq.queue.manager



	 - Type: true
	 - Default: STRING
	 - Importance: The name of the queue manager.
	 - Required: HIGH

ðŸ”˜ mq.channel



	 - Type: true
	 - Default: STRING
	 - Importance: The channel for client connections.
	 - Required: HIGH

ðŸ”˜ mq.ssl.cipher.suite



	 - Type: false
	 - Default: STRING
	 - Importance: The CipherSuite for SSL connections.
	 - Required: HIGH

ðŸ”˜ mq.ssl.fips.required



	 - Type: false
	 - Default: BOOLEAN
	 - Importance: Whether SSL FIPS is required.
	 - Required: HIGH

ðŸ”˜ mq.ssl.peer.name



	 - Type: false
	 - Default: STRING
	 - Importance: Sets a distinguished name (DN) pattern. If sslCipherSuite is set, this pattern can ensure that the correct queue manager is used. The connection attempt fails if the distinguished name provided by the queue manager does not match this pattern.
	 - Required: HIGH

==========================
Number of tasks for this connector
==========================
ðŸ”˜ tasks.max



	 - Type: true
	 - Default: INT
	 - Importance: Maximum number of tasks for the connector.
	 - Required: HIGH

==========================
Additional Configs
==========================
ðŸ”˜ value.converter.replace.null.with.default

Whether to replace fields that have a default value and that are null to the default value. When set to true, the default value is used, otherwise null is used. Applicable for JSON Converter.

	 - Type: BOOLEAN
	 - Default: true
	 - Importance: LOW
	 - Required: false

ðŸ”˜ value.converter.reference.subject.name.strategy

Set the subject reference name strategy for value. Valid entries are DefaultReferenceSubjectNameStrategy or QualifiedReferenceSubjectNameStrategy. Note that the subject reference name strategy can be selected only for PROTOBUF format with the default strategy being DefaultReferenceSubjectNameStrategy.

	 - Type: STRING
	 - Default: DefaultReferenceSubjectNameStrategy
	 - Importance: LOW
	 - Required: false

ðŸ”˜ value.converter.schemas.enable

Include schemas within each of the serialized values. Input messages must contain `schema` and `payload` fields and may not contain additional fields. For plain JSON data, set this to `false`. Applicable for JSON Converter.

	 - Type: BOOLEAN
	 - Default: false
	 - Importance: LOW
	 - Required: false

ðŸ”˜ errors.tolerance

Use this property if you would like to configure the connector's error handling behavior. WARNING: This property should be used with CAUTION for SOURCE CONNECTORS as it may lead to dataloss. If you set this property to 'all', the connector will not fail on errant records, but will instead log them (and send to DLQ for Sink Connectors) and continue processing. If you set this property to 'none', the connector task will fail on errant records.

	 - Type: STRING
	 - Default: none
	 - Importance: LOW
	 - Required: false

ðŸ”˜ value.converter.ignore.default.for.nullables

When set to true, this property ensures that the corresponding record in Kafka is NULL, instead of showing the default column value. Applicable for AVRO,PROTOBUF and JSON_SR Converters.

	 - Type: BOOLEAN
	 - Default: false
	 - Importance: LOW
	 - Required: false

ðŸ”˜ value.converter.decimal.format

Specify the JSON/JSON_SR serialization format for Connect DECIMAL logical type values with two allowed literals:

	 - Type: STRING
	 - Default: BASE64
	 - Importance: LOW
	 - Required: false

ðŸ”˜ value.converter.connect.meta.data



	 - Type: false
	 - Default: BOOLEAN
	 - Importance: Allow the Connect converter to add its metadata to the output schema. Applicable for Avro Converters.
	 - Required: LOW

ðŸ”˜ value.converter.value.subject.name.strategy

Determines how to construct the subject name under which the value schema is registered with Schema Registry.

	 - Type: STRING
	 - Default: TopicNameStrategy
	 - Importance: LOW
	 - Required: false

ðŸ”˜ key.converter.key.subject.name.strategy

How to construct the subject name for key schema registration.

	 - Type: STRING
	 - Default: TopicNameStrategy
	 - Importance: LOW
	 - Required: false

==========================
Auto-restart policy
==========================
ðŸ”˜ auto.restart.on.user.error

Enable connector to automatically restart on user-actionable errors.

	 - Type: BOOLEAN
	 - Default: true
	 - Importance: MEDIUM
	 - Required: false

